


echarts.init(document.getElementById("pieChart")).setOption({
            globe: {...},//地球组件。组件提供了地球的绘制以及相应的坐标系，开发者可以在上面展示三维的散点图，气泡图，柱状图，飞线图。
            geo3D: {...},//三维的地理坐标系组件。组件提供了三维 GeoJSON 的绘制以及相应的坐标系，开发者可以在上面展示三维的散点图，气泡图，柱状图，飞线图。
            mapbox3D: {...},//基于 mapbox-gl-js 的地理组件。支持在 mapbox 的地图上绘制三维的散点图，飞线图，柱状图和地图。你可以利用 Mapbox 强大的地图服务和 ECharts GL 丰富的可视化和渲染效果实现你想要的可视化作品
            grid3D: {...},//三维笛卡尔坐标系组件。需要和 xAxis3D，yAxis3D，zAxis3D 三个坐标轴组件一起使用。
            xAxis3D: {...},//三维笛卡尔坐标系中的 x 轴。
            yAxis3D: {...},//三维笛卡尔坐标系中的 y 轴。
            zAxis3D: {...},//三维笛卡尔坐标系中的 z 轴
            series: [...],//系列列表。每个系列通过 type 决定自己的图表类型。echarts-gl 加入了丰富的三维可视化类型，包括 三维柱状图 bar3D，三维散点图 scatter3D，三维飞线 lines3D，曲面图 surface，大部分可视化类型都能在多种坐标系组件中使用。而且与 echarts 原先的图例，tooltip 等交互组件有良好的集成。
            
            })
echarts的API：
echarts: {...},//全局 echarts 对象，在 script 标签引入 echarts.js 文件后获得，或者在 AMD 环境中通过 require('echarts') 获得
echartsInstance: {...},//通过 echarts.init 创建的实例。
action: {...},//ECharts 中支持的图表行为，通过 dispatchAction 触发。
events: {...},//在 ECharts 中主要通过 on 方法添加事件处理函数，该文档描述了所有 ECharts 的事件列表。(ECharts 中的事件分为两种，一种是鼠标事件，在鼠标点击某个图形上会触发，还有一种是 调用 dispatchAction 后触发的事件。)

            
            
            
            
